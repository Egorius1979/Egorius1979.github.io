{"version":3,"sources":["client/components/auth-page.js","redux/poke-reducer.js","client/components/login-check.js","client/components/header.js","client/components/sidebar.js","client/components/cards.js","client/components/pagination.js","client/components/main-page.js","client/components/card-page.js","client/components/404.js","redux/store.js","index.js"],"names":["Auth","useState","login","setLogin","password","setPassword","logPassConfirmed","setLogPassConfirmed","error","setError","alert","to","id","action","className","onSubmit","e","preventDefault","class","type","name","placeholder","required","value","onChange","target","SET_IS_LOGGED_IN","GET_CARDS","SET_TYPES","SET_SUBTYPES","GET_POKEMON_CARD","SET_PAGES_AMOUNT","initialState","isLoggedIn","cards","types","subtypes","pokemonCard","itemsPerPage","pagesAmount","setLoggedIn","isloggedIn","Check","number","setNumber","useSelector","s","poke","dispatch","useDispatch","localStorage","setItem","htmlFor","pattern","minLength","maxLength","Header","pokemonId","useParams","history","useHistory","onClick","goBack","push","Sidebar","typeSelected","subtypeSelected","useEffect","axios","then","res","data","map","it","toLowerCase","sort","disabled","hidden","Cards","currentPage","getCards","window","scroll","filter","index","src","imageUrl","alt","artist","Pagination","maxCards","length","Math","ceil","pagesArray","Array","fill","Main","getItem","PokemonCard","card","getPokemonCard","imageUrlHiRes","subtype","attacks","damage","convertedEnergyCost","resistances","evolvesFrom","text","NotFound","tabIndex","defaultProps","configureStore","reducer","state","ReactDOM","render","StrictMode","store","basename","process","exact","path","component","expact","from","document","getElementById"],"mappings":"kPAoEeA,EA9DF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAG+BJ,oBAAS,GAHxC,mBAGVK,EAHU,KAGQC,EAHR,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAMjB,OAAIH,GACFI,MAAM,8PACC,cAAC,IAAD,CAAUC,GAAG,kBAIpB,sBAAMC,GAAG,KAAT,SACE,uBACEC,OAAO,IACPC,UAAU,OACVC,SAAU,SAACC,GACTA,EAAEC,iBApBQ,iBAqBNf,GApBS,aAoBgBE,GAC3BG,GAAoB,GAEtBJ,EAAS,IACTE,EAAY,IACZI,EAAS,mOAVb,UAaE,sBAAKS,MAAM,cAAX,UACE,uBACEC,KAAK,QACLC,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAACR,GACTb,EAASa,EAAES,OAAOF,OAClBd,EAAS,OAGb,sBAAMS,MAAM,cAAZ,6MAIF,qBAAKA,MAAM,cAAX,SACE,uBACEC,KAAK,WACLC,KAAK,OACLC,YAAY,WACZC,UAAQ,EACRC,MAAOnB,EACPoB,SAAU,SAACR,GACTX,EAAYW,EAAES,OAAOF,OACrBd,EAAS,SAIf,wBAAQU,KAAK,SAAb,oEACA,mBAAGL,UAAU,iBAAb,SAA+BN,U,+BC5DjCkB,EAAmB,mBACnBC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAmB,mBACnBC,EAAmB,mBAEnBC,EAAe,CACnBC,YAAY,EACZC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,YAAa,GAuBR,SAASC,EAAYC,GAC1B,MAAO,CAAEtB,KAAMO,EAAkBe,cCnCnC,IAmDeC,EAjDD,WAAO,IAAD,EACUzC,mBAAS,IADnB,mBACX0C,EADW,KACHC,EADG,OAEQ3C,mBAAS,IAFjB,mBAEXO,EAFW,KAEJC,EAFI,KAGVwB,EAAeY,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAApCd,WACFe,EAAWC,cAEjB,OAAIhB,GACFiB,aAAaC,QAAQ,aAAc,mBAC5B,cAAC,IAAD,CAAUxC,GAAG,cAIpB,uBACEE,OAAO,IACPC,UAAU,OACVC,SAAU,SAACC,GACTA,EAAEC,iBAlBW,UAmBR0B,GACHK,EAASR,GAAY,IAEvBI,EAAU,IACVnC,EAAS,gGATb,UAYE,uBAAO2C,QAAQ,gBACf,sBAAKtC,UAAU,cAAf,UACE,uBACEF,GAAG,cACHO,KAAK,OACLC,KAAK,cACLC,YAAY,iBACZC,UAAQ,EACRC,MAAOoB,EACPU,QAAQ,SACRC,UAAU,IACVC,UAAU,IACV/B,SAAU,SAACR,GACT4B,EAAU5B,EAAES,OAAOF,OACnBd,EAAS,OAGb,sBAAMK,UAAU,cAAhB,gKAEF,wBAAQK,KAAK,SAAb,oEACA,mBAAGL,UAAU,iBAAb,SAA+BN,QCrBtBgD,EAzBA,WAAO,IACZC,EAAcC,cAAdD,UACFT,EAAWC,cACXU,EAAUC,cAEhB,OACE,mCACE,qBAAK9C,UAAY2C,EAA+B,GAAnB,iBAA7B,SACE,wBAAQtC,KAAK,SAAS0C,QAAS,kBAAMF,EAAQG,UAA7C,oBAIF,wBACE3C,KAAK,SACL0C,QAAS,WACPb,EAASR,GAAY,IACrBmB,EAAQI,KAAK,WAJjB,wBCwCSC,EApDC,WAAO,IAAD,EACsBN,cAAlCO,EADY,EACZA,aAAcC,EADF,EACEA,gBADF,EAEQrB,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAAzCZ,EAFY,EAEZA,MAAOC,EAFK,EAELA,SACTY,EAAWC,cACXU,EAAUC,cAMhB,OAJAO,qBAAU,WACRnB,GHwCK,SAACA,GACNoB,IAAM,sCAAsCC,MAAK,SAACC,GAAD,OAC/CtB,EAAS,CACP7B,KAAMS,EACNO,MAAOmC,EAAIC,KAAKpC,MAAMqC,KAAI,SAACC,GAAD,OAAQA,EAAGC,iBAAeC,YAGxDP,IAAM,yCAAyCC,MAAK,SAACC,GAAD,OAClDtB,EAAS,CACP7B,KAAMU,EACNO,SAAUkC,EAAIC,KAAKnC,SAASoC,KAAI,SAACC,GAAD,OAAQA,EAAGC,iBAAeC,iBGjD7D,IAGD,sBAAK7D,UAAU,eAAf,UACE,yBACEM,KAAK,YACLR,GAAG,YACHW,MAAO0C,EAAeA,EAAaS,cAAgB,GACnDlD,SAAU,SAACR,GACTkD,EACIP,EAAQI,KAAR,iBAAuB/C,EAAES,OAAOF,MAAhC,YAAyC2C,EAAzC,OACAP,EAAQI,KAAR,iBAAuB/C,EAAES,OAAOF,MAAhC,QAPR,UAUE,wBAAQA,MAAM,GAAGqD,UAAQ,EAACC,QAAM,EAAhC,yBAGC1C,EAAMqC,KAAI,SAACC,GAAD,OACT,wBAAQlD,MAAOkD,EAAf,SACGA,GADqBA,SAK5B,yBACErD,KAAK,eACLR,GAAG,eACHW,MAAO2C,EAAkBA,EAAgBQ,cAAgB,GACzDlD,SAAU,SAACR,GACT2C,EAAQI,KAAR,iBAAuBE,GAAgB,GAAvC,YAA6CjD,EAAES,OAAOF,MAAtD,QALJ,UAQE,wBAAQA,MAAM,GAAGqD,UAAQ,EAACC,QAAM,EAAhC,4BAGCzC,EAASoC,KAAI,SAACC,GAAD,OACZ,wBAAQlD,MAAOkD,EAAf,SACGA,GADqBA,aCHnBK,EAxCD,WAAO,IAAD,EACqCpB,cAA/CO,EADU,EACVA,aAAcC,EADJ,EACIA,gBAAiBa,EADrB,EACqBA,YADrB,EAE2BlC,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAA1Db,EAFU,EAEVA,MAAOI,EAFG,EAEHA,aAAcC,EAFX,EAEWA,YACvBS,EAAWC,cAQjB,OANAkB,qBAAU,WACRnB,EJgCG,WAA4D,IAA1CiB,EAAyC,uDAA1B,GAAIC,EAAsB,uDAAJ,GAC5D,OAAO,SAAClB,GACNoB,IAAM,4CAAD,OACyCH,EADzC,oBACiEC,IACpEG,MAAK,SAACC,GAAD,OAAStB,EAAS,CAAE7B,KAAMQ,EAAWO,MAAOoC,EAAIC,KAAKrC,YIpCnD8C,CAASf,EAAcC,MAC/B,CAACD,EAAcC,IAElBe,OAAOC,OAAO,EAAG,GAGf,sBACEpE,UACEyB,KAAiBwC,EACb,2BACA,eAJR,SAOG7C,EACEiD,QACC,SAACV,EAAIW,GAAL,OACEA,KAAWL,EAAc,GAAKzC,GAC9B8C,IAAUL,EAAczC,EAAe,KAE1CkC,KAAI,SAACC,GACJ,OACE,sBAAiB3D,UAAU,eAA3B,UACE,cAAC,IAAD,CAAMH,GAAE,mBAAc8D,EAAG7D,IAAzB,SACE,qBAAKyE,IAAKZ,EAAGa,SAAUC,IAAKd,EAAGrD,KAAMN,UAAU,gBAEjD,oBAAIA,UAAU,QAAd,SAAuB2D,EAAGrD,OAC1B,mBAAGN,UAAU,QAAb,SAAsB2D,EAAGe,WALjBf,EAAG7D,UCsBV6E,EAjDI,WAAO,IAAD,EACgC/B,cAA/CO,EADe,EACfA,aAAcC,EADC,EACDA,gBAAiBa,EADhB,EACgBA,YAC/BzC,EAAiBO,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAAtCT,aACFoD,EAAW7C,aAAY,SAACC,GAAD,OAAOA,EAAEC,KAAKb,MAAMyD,UAC3CpD,EAAcqD,KAAKC,KAAKH,EAAWpD,GACnCwD,EAAaxD,EACfyD,MAAMxD,GACHyD,KAAK,MACLxB,KAAI,SAACC,EAAIW,GAAL,OAAeA,EAAQ,KAC9B,GACEzB,EAAUC,cACVZ,EAAWC,cAMjB,OAJAkB,qBAAU,WACRnB,EL0DK,CAAE7B,KAAMY,EAAkBR,MK1DRgB,MACtB,CAACA,IAGoB,IAAtBuD,EAAWH,QACT,qBAAK7E,UAAU,aAAf,SACGgF,EAAWtB,KAAI,SAACC,EAAIW,GAAL,OACd,wBACEjE,KAAK,SACLyD,UAAWG,IAAgBN,EAE3B3D,UAAU,iBACV+C,QAAS,WACFI,GAAiBC,GACpBP,EAAQI,KAAR,iBAAuBU,IAErBR,GAAgBC,GAClBP,EAAQI,KAAR,iBAAuBE,EAAvB,YAAuCC,EAAvC,YAA0DO,IAExDR,IAAiBC,GACnBP,EAAQI,KAAR,iBAAuBE,EAAvB,YAAuCQ,KAEpCR,GAAgBC,GACnBP,EAAQI,KAAR,kBAAwBG,EAAxB,YAA2CO,KAhBjD,SAoBGA,GAjBIW,SCDFa,EApBF,WAGX,OAFuBpD,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAApCd,YAEYiB,aAAagD,QAAQ,cAIvC,sBAAKpF,UAAU,YAAf,UACE,cAAC,EAAD,IACA,gCACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,UAVG,cAAC,IAAD,CAAUH,GAAG,YCwGTwF,EA9GK,WAAO,IACjB1C,EAAcC,cAAdD,UADgB,EAEYZ,aAAY,SAACC,GAAD,OAAOA,EAAEC,QAAjDV,EAFgB,EAEhBA,YAAaJ,EAFG,EAEHA,WACfe,EAAWC,cAMjB,OAJAkB,qBAAU,WACRnB,EPwDG,SAAwBS,GAC7B,OAAO,SAACT,GACNoB,IAAM,yCAAD,OAA0CX,IAAaY,MAAK,SAACC,GAAD,OAC/DtB,EAAS,CAAE7B,KAAMW,EAAkBsE,KAAM9B,EAAIC,KAAKrC,MAAM,SO3DjDmE,CAAe5C,MACvB,CAACA,IAECxB,GAAeiB,aAAagD,QAAQ,cAIvC,sBAAKpF,UAAU,YAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACE,qBACEuE,IAAKhD,EAAYiE,cACjBf,IAAKlD,EAAYjB,KACjBN,UAAU,gBAEZ,sBAAKA,UAAU,qBAAf,UACE,oBAAGA,UAAWuB,EAAYjB,KAAO,GAAK,OAAtC,mBACQ,uBAAMN,UAAW,YAAjB,cAAgCuB,EAAYjB,KAA5C,UAER,oBAAGN,UAAWuB,EAAYF,MAAQ,GAAK,OAAvC,kBAEE,uBAAMrB,UAAU,YAAhB,cAA8BuB,EAAYF,MAA1C,UAEF,oBAAGrB,UAAWuB,EAAYkE,QAAU,GAAK,OAAzC,qBAEE,uBAAMzF,UAAU,eAAhB,cAAiCuB,EAAYkE,QAA7C,UAEF,uBACA,sBACEzF,WACGuB,EAAYmE,SAAW,IAAIb,OAAS,aAAe,OAFxD,UAKE,mBAAG7E,UAAU,oBAAb,qBACA,mBAAGA,UAAU,kBAAb,UACIuB,EAAYmE,SAAW,IAAIhC,KAAI,SAACC,GAAD,OAC/B,uBAAoB3D,UAAU,wBAA9B,cACI2D,EAAGrD,KADP,IACc,IACZ,uBAAMN,UAAU,eAAhB,UACG,IACA2D,EAAGgC,OAAH,WAAgBhC,EAAGgC,OAAnB,KAA+B,QAJzBhC,EAAGrD,cAUpB,sBACEN,WACGuB,EAAYmE,SAAW,IAAIb,OAAS,aAAe,OAFxD,UAKE,mBAAG7E,UAAU,aAAb,0BACA,mBAAGA,UAAU,kBAAb,UACIuB,EAAYmE,SAAW,IAAIhC,KAAI,SAACC,GAAD,OAC/B,uBAAoB3D,UAAU,wBAA9B,cACI2D,EAAGrD,KADP,IACc,IACZ,sBAAMN,UAAU,aAAhB,SACG2D,EAAGiC,oBAAH,WACOjC,EAAGiC,oBADV,KAEG,OALGjC,EAAGrD,cAWpB,sBACEN,WACGuB,EAAYsE,aAAe,IAAIhB,OAAS,aAAe,OAF5D,UAKE,mBAAG7E,UAAU,YAAb,yBACA,mBAAGA,UAAU,kBAAb,UACIuB,EAAYsE,aAAe,IAAInC,KAAI,SAACC,GAAD,OACnC,uBAAoB3D,UAAU,wBAA9B,cACI2D,EAAGtD,KADP,IACc,IACZ,sBAAML,UAAU,YAAhB,SACG2D,EAAGlD,MAAH,WAAekD,EAAGlD,MAAlB,KAA6B,OAHvBkD,EAAGtD,cASpB,oBAAGL,UAAWuB,EAAYuE,YAAc,GAAK,OAA7C,yBAEE,uBAAM9F,UAAU,mBAAhB,cACIuB,EAAYuE,YADhB,UAIF,+BACIvE,EAAYmE,SAAW,IAAIhC,KAAI,SAACC,EAAIW,GAAL,OAC/B,oBAAGtE,UAAU,UAAb,UACE,sBAAMA,UAAU,aAAhB,SACG2D,EAAGoC,KAAH,iBAAoBzB,EAAQ,EAA5B,KAAmC,KAC9B,IACPX,EAAGoC,OAJsBzB,iBAtF/B,cAAC,IAAD,CAAUzE,GAAG,YCblBmG,EAAW,WACf,IAAMnD,EAAUC,cAEhB,OACE,qBAAK9C,UAAU,YAAf,SACE,gCACE,qCACA,+CACA,kFACA,uBACA,yBACEK,KAAK,SACL4F,SAAS,IACTlD,QAAS,WACPF,EAAQI,KAAK,MAJjB,UAOG,IAPH,+BAiBR+C,EAASE,aAAe,GAETF,Q,QC7BAG,cAAe,CAC5BC,QAAS,CACPnE,KTcW,WAAmC,IAAlCoE,EAAiC,uDAAzBnF,EAAcnB,EAAW,uCAC/C,OAAQA,EAAOM,MACb,KAAKO,EACH,OAAO,2BAAKyF,GAAZ,IAAmBlF,WAAYpB,EAAO4B,aACxC,KAAKd,EACH,OAAO,2BAAKwF,GAAZ,IAAmBjF,MAAOrB,EAAOqB,QACnC,KAAKN,EACH,OAAO,2BAAKuF,GAAZ,IAAmBhF,MAAOtB,EAAOsB,QACnC,KAAKN,EACH,OAAO,2BAAKsF,GAAZ,IAAmB/E,SAAUvB,EAAOuB,WACtC,KAAKN,EACH,OAAO,2BAAKqF,GAAZ,IAAmB9E,YAAaxB,EAAOuF,OACzC,KAAKrE,EACH,OAAO,2BAAKoF,GAAZ,IAAmB5E,YAAa1B,EAAOU,QAEzC,QACE,OAAO4F,OUvBbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAeC,SAAUC,4BAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW5H,IACtC,cAAC,IAAD,CAAO0H,OAAK,EAACC,KAAK,eAAeC,UAAWlF,IAC5C,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,sBAAsBC,UAAW3B,IACnD,cAAC,IAAD,CACEyB,OAAK,EACLC,KAAK,oCACLC,UAAW3B,IAEb,cAAC,IAAD,CACE4B,QAAM,EACNF,KAAK,wCACLC,UAAW3B,IAEb,cAAC,IAAD,CACEyB,OAAK,EACLC,KAAK,qDACLC,UAAW3B,IAEb,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,sBAAsBC,UAAWzB,IACnD,cAAC,IAAD,CAAU2B,KAAK,IAAInH,GAAG,aACtB,cAAC,IAAD,CAAOiH,UAAW,kBAAM,cAAC,EAAD,gBAKhCG,SAASC,eAAe,W","file":"static/js/main.2152a424.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst VALID_LOGIN = \"kode@kode.ru\";\nconst VALID_PASSWORD = \"Enk0deng\";\n\nconst Auth = () => {\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logPassConfirmed, setLogPassConfirmed] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  if (logPassConfirmed) {\n    alert(\"Ура, получилось! введите '123456' на следующей странице\");\n    return <Redirect to=\"/login/check\" />;\n  }\n\n  return (\n    <body id=\"bg\">\n      <form\n        action=\"#\"\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (login === VALID_LOGIN && password === VALID_PASSWORD) {\n            setLogPassConfirmed(true);\n          }\n          setLogin(\"\");\n          setPassword(\"\");\n          setError(\"Впервые слышу! Повнимательней, пожалуйста!\");\n        }}\n      >\n        <div class=\"form__field\">\n          <input\n            type=\"email\"\n            name=\"name\"\n            placeholder=\"Login\"\n            required\n            value={login}\n            onChange={(e) => {\n              setLogin(e.target.value);\n              setError(\"\");\n            }}\n          />\n          <span class=\"form__error\">\n            поле должно содержать E-Mail в формате vasya@site.com\n          </span>\n        </div>\n        <div class=\"form__field\">\n          <input\n            type=\"password\"\n            name=\"name\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n              setError(\"\");\n            }}\n          />\n        </div>\n        <button type=\"submit\">Отправить</button>\n        <p className=\"log-pass-error\">{error}</p>\n      </form>\n    </body>\n  );\n};\n\nexport default Auth;\n","import axios from \"axios\";\n\nconst SET_IS_LOGGED_IN = \"SET_IS_LOGGED_IN\";\nconst GET_CARDS = \"GET_CARDS\";\nconst SET_TYPES = \"GET_TYPES\";\nconst SET_SUBTYPES = \"GET_SUBTYPES\";\nconst GET_POKEMON_CARD = \"GET_POKEMON_CARD\";\nconst SET_PAGES_AMOUNT = \"SET_PAGES_AMOUNT\";\n\nconst initialState = {\n  isLoggedIn: false,\n  cards: [],\n  types: [],\n  subtypes: [],\n  pokemonCard: {},\n  itemsPerPage: 12,\n  pagesAmount: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_IS_LOGGED_IN:\n      return { ...state, isLoggedIn: action.isloggedIn };\n    case GET_CARDS:\n      return { ...state, cards: action.cards };\n    case SET_TYPES:\n      return { ...state, types: action.types };\n    case SET_SUBTYPES:\n      return { ...state, subtypes: action.subtypes };\n    case GET_POKEMON_CARD:\n      return { ...state, pokemonCard: action.card };\n    case SET_PAGES_AMOUNT:\n      return { ...state, pagesAmount: action.value };\n\n    default:\n      return state;\n  }\n};\n\nexport function setLoggedIn(isloggedIn) {\n  return { type: SET_IS_LOGGED_IN, isloggedIn };\n}\n\nexport function getCards(typeSelected = \"\", subtypeSelected = \"\") {\n  return (dispatch) => {\n    axios(\n      `https://api.pokemontcg.io/v1/cards?types=${typeSelected}&subtype=${subtypeSelected}`\n    ).then((res) => dispatch({ type: GET_CARDS, cards: res.data.cards }));\n  };\n}\n\nexport function getFilters() {\n  return (dispatch) => {\n    axios(\"https://api.pokemontcg.io/v1/types\").then((res) =>\n      dispatch({\n        type: SET_TYPES,\n        types: res.data.types.map((it) => it.toLowerCase()).sort(),\n      })\n    );\n    axios(\"https://api.pokemontcg.io/v1/subtypes\").then((res) =>\n      dispatch({\n        type: SET_SUBTYPES,\n        subtypes: res.data.subtypes.map((it) => it.toLowerCase()).sort(),\n      })\n    );\n  };\n}\n\nexport function getPokemonCard(pokemonId) {\n  return (dispatch) => {\n    axios(`https://api.pokemontcg.io/v1/cards?id=${pokemonId}`).then((res) =>\n      dispatch({ type: GET_POKEMON_CARD, card: res.data.cards[0] })\n    );\n  };\n}\n\nexport function setPageAmount(value) {\n  return { type: SET_PAGES_AMOUNT, value };\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setLoggedIn } from \"../../redux/poke-reducer\";\nimport { Redirect } from \"react-router-dom\";\n\nconst VALID_NUMBER = 123456;\n\nconst Check = () => {\n  const [number, setNumber] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { isLoggedIn } = useSelector((s) => s.poke);\n  const dispatch = useDispatch();\n\n  if (isLoggedIn) {\n    localStorage.setItem(\"poke-token\", \"Good job, guys!\");\n    return <Redirect to=\"/cards/1\" />;\n  }\n\n  return (\n    <form\n      action=\"#\"\n      className=\"form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (+number === VALID_NUMBER) {\n          dispatch(setLoggedIn(true));\n        }\n        setNumber(\"\");\n        setError(\"Сосредоточьтесь!\");\n      }}\n    >\n      <label htmlFor=\"login-check\" />\n      <div className=\"form__field\">\n        <input\n          id=\"login-check\"\n          type=\"name\"\n          name=\"login-check\"\n          placeholder=\"6-digit number\"\n          required\n          value={number}\n          pattern=\"\\d{6}\"\n          minLength=\"6\"\n          maxLength=\"6\"\n          onChange={(e) => {\n            setNumber(e.target.value);\n            setError(\"\");\n          }}\n        />\n        <span className=\"form__error\">поле должно содержать 6 цифр</span>\n      </div>\n      <button type=\"submit\">Отправить</button>\n      <p className=\"log-pass-error\">{error}</p>\n    </form>\n  );\n};\n\nexport default Check;\n","import React from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { setLoggedIn } from \"../../redux/poke-reducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst Header = () => {\n  const { pokemonId } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <header>\n      <div className={!pokemonId ? \"back-invisible\" : \"\"}>\n        <button type=\"button\" onClick={() => history.goBack()}>\n          BACK\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(setLoggedIn(false));\n          history.push(\"/login\");\n        }}\n      >\n        LOGOUT\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getFilters } from \"../../redux/poke-reducer\";\n\nconst Sidebar = () => {\n  const { typeSelected, subtypeSelected } = useParams();\n  const { types, subtypes } = useSelector((s) => s.poke);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getFilters());\n  }, []);\n\n  return (\n    <div className=\"left-sidebar\">\n      <select\n        name=\"card-type\"\n        id=\"card-type\"\n        value={typeSelected ? typeSelected.toLowerCase() : \"\"}\n        onChange={(e) => {\n          subtypeSelected\n            ? history.push(`/cards/${e.target.value}/${subtypeSelected}/1`)\n            : history.push(`/cards/${e.target.value}/1`);\n        }}\n      >\n        <option value=\"\" disabled hidden>\n          Choose type\n        </option>\n        {types.map((it) => (\n          <option value={it} key={it}>\n            {it}\n          </option>\n        ))}\n      </select>\n      <select\n        name=\"card-subtype\"\n        id=\"card-subtype\"\n        value={subtypeSelected ? subtypeSelected.toLowerCase() : \"\"}\n        onChange={(e) => {\n          history.push(`/cards/${typeSelected || \"\"}/${e.target.value}/1`);\n        }}\n      >\n        <option value=\"\" disabled hidden>\n          Choose subtype\n        </option>\n        {subtypes.map((it) => (\n          <option value={it} key={it}>\n            {it}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getCards } from \"../../redux/poke-reducer\";\n\nconst Cards = () => {\n  const { typeSelected, subtypeSelected, currentPage } = useParams();\n  const { cards, itemsPerPage, pagesAmount } = useSelector((s) => s.poke);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCards(typeSelected, subtypeSelected));\n  }, [typeSelected, subtypeSelected]);\n\n  window.scroll(0, 0);\n\n  return (\n    <main\n      className={\n        pagesAmount === +currentPage\n          ? \"main-section align-items\"\n          : \"main-section\"\n      }\n    >\n      {cards\n        .filter(\n          (it, index) =>\n            index >= (+currentPage - 1) * itemsPerPage &&\n            index <= +currentPage * itemsPerPage - 1\n        )\n        .map((it) => {\n          return (\n            <div key={it.id} className=\"pokemon-card\">\n              <Link to={`/pokemon/${it.id}`}>\n                <img src={it.imageUrl} alt={it.name} className=\"cards-img\" />\n              </Link>\n              <h3 className=\"names\">{it.name}</h3>\n              <p className=\"names\">{it.artist}</p>\n            </div>\n          );\n        })}\n    </main>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { setPageAmount } from \"../../redux/poke-reducer\";\n\nconst Pagination = () => {\n  const { typeSelected, subtypeSelected, currentPage } = useParams();\n  const { itemsPerPage } = useSelector((s) => s.poke);\n  const maxCards = useSelector((s) => s.poke.cards.length);\n  const pagesAmount = Math.ceil(maxCards / itemsPerPage);\n  const pagesArray = itemsPerPage\n    ? Array(pagesAmount)\n        .fill(null)\n        .map((it, index) => index + 1)\n    : [];\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPageAmount(pagesAmount));\n  }, [pagesAmount]);\n\n  return (\n    pagesArray.length !== 1 && (\n      <div className=\"pagination\">\n        {pagesArray.map((it, index) => (\n          <button\n            type=\"button\"\n            disabled={+currentPage === it ? true : false}\n            key={index}\n            className=\"pagination-btn\"\n            onClick={() => {\n              if (!typeSelected && !subtypeSelected) {\n                history.push(`/cards/${it}`);\n              }\n              if (typeSelected && subtypeSelected) {\n                history.push(`/cards/${typeSelected}/${subtypeSelected}/${it}`);\n              }\n              if (typeSelected && !subtypeSelected) {\n                history.push(`/cards/${typeSelected}/${it}`);\n              }\n              if (!typeSelected && subtypeSelected) {\n                history.push(`/cards//${subtypeSelected}/${it}`);\n              }\n            }}\n          >\n            {it}\n          </button>\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport Cards from \"./cards\";\nimport Pagination from \"./pagination\";\n\nconst Main = () => {\n  const { isLoggedIn } = useSelector((s) => s.poke);\n\n  if (!isLoggedIn && !localStorage.getItem(\"poke-token\"))\n    return <Redirect to=\"/login\" />;\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div>\n        <div className=\"main-content\">\n          <Sidebar />\n          <Cards />\n        </div>\n        <Pagination />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { getPokemonCard } from \"../../redux/poke-reducer\";\nimport Header from \"./header\";\n\nconst PokemonCard = () => {\n  const { pokemonId } = useParams();\n  const { pokemonCard, isLoggedIn } = useSelector((s) => s.poke);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPokemonCard(pokemonId));\n  }, [pokemonId]);\n\n  if (!isLoggedIn && !localStorage.getItem(\"poke-token\"))\n    return <Redirect to=\"/login\" />;\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"card-content\">\n        <img\n          src={pokemonCard.imageUrlHiRes}\n          alt={pokemonCard.name}\n          className=\"pokemon-img\"\n        />\n        <div className=\"pokemon-properties\">\n          <p className={pokemonCard.name ? \"\" : \"none\"}>\n            Name: <span className={\"poke-name\"}>\"{pokemonCard.name}\"</span>\n          </p>\n          <p className={pokemonCard.types ? \"\" : \"none\"}>\n            Type:\n            <span className=\"poke-type\">\"{pokemonCard.types}\"</span>\n          </p>\n          <p className={pokemonCard.subtype ? \"\" : \"none\"}>\n            SubType:\n            <span className=\"poke-subtype\">\"{pokemonCard.subtype}\"</span>\n          </p>\n          <hr />\n          <div\n            className={\n              (pokemonCard.attacks || []).length ? \"prop-block\" : \"none\"\n            }\n          >\n            <p className=\"prop-block__title\">Damage:</p>\n            <p className=\"prop-block__col\">\n              {(pokemonCard.attacks || []).map((it) => (\n                <span key={it.name} className=\"prop-block__col-block\">\n                  \"{it.name}\"{\" \"}\n                  <span className=\"damage-color\">\n                    {\" \"}\n                    {it.damage ? `(${it.damage})` : \"\"}\n                  </span>\n                </span>\n              ))}\n            </p>\n          </div>\n          <div\n            className={\n              (pokemonCard.attacks || []).length ? \"prop-block\" : \"none\"\n            }\n          >\n            <p className=\"cost-title\">Attack cost:</p>\n            <p className=\"prop-block__col\">\n              {(pokemonCard.attacks || []).map((it) => (\n                <span key={it.name} className=\"prop-block__col-block\">\n                  \"{it.name}\"{\" \"}\n                  <span className=\"cost-color\">\n                    {it.convertedEnergyCost\n                      ? `(${it.convertedEnergyCost})`\n                      : \"\"}\n                  </span>\n                </span>\n              ))}\n            </p>\n          </div>\n          <div\n            className={\n              (pokemonCard.resistances || []).length ? \"prop-block\" : \"none\"\n            }\n          >\n            <p className=\"res-title\">Resistance:</p>\n            <p className=\"prop-block__col\">\n              {(pokemonCard.resistances || []).map((it) => (\n                <span key={it.type} className=\"prop-block__col-block\">\n                  \"{it.type}\"{\" \"}\n                  <span className=\"res-color\">\n                    {it.value ? `(${it.value})` : \"\"}\n                  </span>\n                </span>\n              ))}\n            </p>\n          </div>\n          <p className={pokemonCard.evolvesFrom ? \"\" : \"none\"}>\n            EvolvesFrom:\n            <span className=\"poke-evolvesFrom\">\n              \"{pokemonCard.evolvesFrom}\"\n            </span>\n          </p>\n          <div>\n            {(pokemonCard.attacks || []).map((it, index) => (\n              <p className=\"attacks\" key={index}>\n                <span className=\"attack-num\">\n                  {it.text ? `Attack ${index + 1}:` : \"\"}\n                </span>{\" \"}\n                {it.text}\n              </p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NotFound = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1>404</h1>\n        <p>Page Not Found</p>\n        <p>It looks like you found a glitch in the matrix...</p>\n        <br />\n        <button\n          type=\"button\"\n          tabIndex=\"0\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          {\" \"}\n          Go to the Main Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nNotFound.propTypes = {};\n\nNotFound.defaultProps = {};\n\nexport default NotFound;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pokeReducer from \"./poke-reducer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    poke: pokeReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Auth from \"./client/components/auth-page\";\r\nimport Check from \"./client/components/login-check\";\r\nimport Main from \"./client/components/main-page\";\r\nimport PokemonCard from \"./client/components/card-page\";\r\nimport NotFound from \"./client/components/404\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Auth} />\r\n          <Route exact path=\"/login/check\" component={Check} />\r\n          <Route exact path=\"/cards/:currentPage\" component={Main} />\r\n          <Route\r\n            exact\r\n            path=\"/cards/:typeSelected/:currentPage\"\r\n            component={Main}\r\n          />\r\n          <Route\r\n            expact\r\n            path=\"/cards//:subtypeSelected/:currentPage\"\r\n            component={Main}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/cards/:typeSelected/:subtypeSelected/:currentPage\"\r\n            component={Main}\r\n          />\r\n          <Route exact path=\"/pokemon/:pokemonId\" component={PokemonCard} />\r\n          <Redirect from=\"/\" to=\"/cards/1\" />\r\n          <Route component={() => <NotFound />} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}